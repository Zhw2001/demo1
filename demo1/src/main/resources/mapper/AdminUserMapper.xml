<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >




<mapper namespace="com.ljsh.test.domain.mapper.AdminUserMapper">
    <sql id="admin_user">admin_user</sql>
    <sql id="user_role">admin_user_role</sql>
    <sql id="user_course">admin_user_course</sql>

    <resultMap type="com.ljsh.test.domain.model.AdminUser" id="userMap">
        <id  property="uid" column="uid" javaType="Long" jdbcType="BIGINT"/>
        <result property="account" column="account" javaType="String" jdbcType="CHAR"/>
        <result property="nickname" column="nickname" javaType="String" jdbcType="VARCHAR"/>
        <result property="password" column="password" javaType="String" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" javaType="Long" jdbcType="BIGINT"/>
        <result property="email" column="email" javaType="String" jdbcType="VARCHAR"/>
        <result property="description" column="description" javaType="String" jdbcType="VARCHAR"/>
        <collection property="adminRoleList" ofType="com.ljsh.test.domain.model.AdminRole" resultMap="com.ljsh.test.domain.mapper.AdminRoleMapper.roleMap"/>
    </resultMap>

    <resultMap type="com.ljsh.test.domain.model.AdminUser" id="userInfoMap">
        <id  property="uid" column="uid" javaType="Long" jdbcType="BIGINT"/>
        <result property="account" column="account" javaType="String" jdbcType="CHAR"/>
        <result property="nickname" column="nickname" javaType="String" jdbcType="VARCHAR"/>
        <result property="password" column="password" javaType="String" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" javaType="Long" jdbcType="BIGINT"/>
        <result property="email" column="email" javaType="String" jdbcType="VARCHAR"/>
        <result property="description" column="description" javaType="String" jdbcType="VARCHAR"/>
        <collection property="adminRoleList" ofType="com.ljsh.test.domain.model.AdminRole" resultMap="com.ljsh.test.domain.mapper.AdminRoleMapper.roleInfoMap"/>
    </resultMap>


    <insert id="newu" parameterType="com.ljsh.test.domain.model.AdminUser">
        INSERT INTO
        <include refid="admin_user"/>
        (account,nickname,password,phone,email,description,create_date)
        VALUES
        (#{account},#{nickname},#{password},#{phone},#{email},#{description},NOW())
    </insert>



    <select id="getUserByAccount" parameterType="String" resultMap="userMap">
        SELECT
        *
        FROM
        <include refid="admin_user"/>
        WHERE
        account = #{account}
    </select>


    <select id="getPasswordByAccount" parameterType="java.lang.String" resultType="String">
        SELECT
        password
        FROM
        <include refid="admin_user"/>
        WHERE
        account = #{account}
    </select>

    <select id="getUidByAccount" parameterType="java.lang.String" resultType="Integer">
        SELECT
        uid
        FROM
        <include refid="admin_user"/>
        WHERE
        account = #{account}
    </select>

    <select id="getAll" resultMap="userMap">
        SELECT * FROM
        (<include refid="admin_user"/> LEFT JOIN admin_user_role ON admin_user_role.UR_uid = uid) left join admin_role on admin_user_role.UR_role_id = admin_role.role_id
    </select>

    <select id="selectPage" resultMap="userMap">
        SELECT * FROM
        (((SELECT* FROM admin_user ORDER BY uid limit #{pageNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER})tmp	LEFT JOIN admin_user_role ON admin_user_role.UR_uid = tmp.uid) left join admin_role on admin_user_role.UR_role_id = admin_role.role_id)
        where account like '%${search}%'
    </select>

    <delete id="del_user" parameterType="String">
        DELETE FROM
        <include refid="admin_user"/>
        WHERE
        account = #{account}
    </delete>


    <select id="get_info_By_Account"  parameterType="String" resultMap="userMap">
        SELECT *
        FROM
        ((admin_user LEFT JOIN admin_user_role ON admin_user_role.UR_uid = admin_user.uid) left join admin_role on admin_user_role.UR_role_id = admin_role.role_id)
        WHERE
        account = #{account}
    </select>

    <select id="get_Info_By_Account" parameterType="String" resultMap="userInfoMap">
        SELECT *
        FROM
        (((admin_user LEFT JOIN admin_user_role ON uid = UR_uid) LEFT JOIN admin_role on UR_role_id = role_id) LEFT JOIN admin_role_auth on role_id = RA_role_id ) LEFT JOIN admin_authority on authority_id = RA_authority_id
        WHERE
        account = #{account}
    </select>

    <!--给用户分配角色相关-->
    <insert id="insertUserRole" >
        REPLACE INTO <include refid="user_role"/>
        (UR_ID, UR_uid, UR_role_id)
        VALUES
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.UR_ID}, #{item.uid}, #{item.role_id})
        </foreach>
    </insert>

    <delete id="delRoleOfUser">
        DELETE FROM <include refid="user_role"/>
        <where>
            (UR_uid, UR_role_id) in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")" >
                (#{item.uid}, #{item.role_id})
            </foreach>
        </where>
    </delete>

    <!--给用户分配课程相关-->
    <select id="getURIDByUserRole"  resultType="Long">
        SELECT UR_ID FROM <include refid="user_role"/>
        WHERE UR_uid = #{UR_uid} AND UR_role_id = #{UR_role_id}
    </select>

    <select id="getCidsOfUser" parameterType="Long" resultType="String">
        SELECT cid FROM <include refid="user_course"/>
        WHERE UR_ID = #{UR_ID}
    </select>

    <insert id="insCourseOfUser" >
        REPLACE INTO <include refid="user_course"/>
        (UR_ID, cid)
        VALUES
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.UR_ID}, #{item.cid})
        </foreach>
    </insert>

    <delete id="delCourseOfUser" >
        DELETE FROM <include refid="user_course"/>
        <where>
            (UR_ID, cid) in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")" >
                (#{item.UR_ID}, #{item.cid})
            </foreach>
        </where>
    </delete>


</mapper>